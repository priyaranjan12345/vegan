name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build_windows:
    runs-on: windows-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build Windows App
        run: |
          flutter config --enable-windows-desktop
          flutter build windows

      - name: Build iss script
        run: dart run inno_bundle:build --no-app --release --no-installer

      - name: Output config into github output
        id: envs
        run: echo $(dart run inno_bundle:build --envs --no-hf) | Out-File -FilePath $Env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Build installer
        uses: Minionguyjpro/Inno-Setup-Action@v1.2.2
        with:
          path: ./build/windows/x64/installer/Release/inno-script.iss

      - name: Upload Windows Installer
        uses: actions/upload-artifact@v3
        with:
          name: windows-installer
          path: ./build/windows/x64/installer/Release/${{ steps.envs.outputs.APP_NAME_CAMEL_CASE }}-x86_64-${{ steps.envs.outputs.APP_VERSION }}-Installer.exe

  build_macos:
    runs-on: macos-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build macOS App
        run: |
          flutter config --enable-macos-desktop
          flutter build macos

      - name: Package macOS App
        run: |
          cd build/macos/Build/Products/Release
          zip -r ../../../../../macos-build.zip .
      
      - name: Upload macOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: macos-build
          path: macos-build.zip

  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install Linux Dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      
      - name: Get Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build Linux App
        run: |
          flutter config --enable-linux-desktop
          flutter build linux

      - name: Package Linux App
        run: |
          cd build/linux/x64/release/bundle
          tar -czvf ../../../../../../linux-build.tar.gz .

      - name: Upload Linux Artifact
        uses: actions/upload-artifact@v3
        with:
          name: linux-build
          path: linux-build.tar.gz

  build_android:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Get Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      - name: Build Android App Bundle
        run: flutter build appbundle

      - name: Build Android APK
        run: flutter build apk

      - name: Upload Android Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: android-builds
          path: |
            build/app/outputs/bundle/release/app-release.aab
            build/app/outputs/flutter-apk/app-release.apk

  build_ios:
    runs-on: macos-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Get Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'

      # Note: Building for iOS without code signing is for testing purposes.
      # For a real release, you will need to set up code signing secrets.
      - name: Build iOS App
        run: flutter build ios --release --no-codesign

      - name: Package iOS App
        run: |
          cd build/ios/iphoneos/
          zip -r ../../../ios-build.zip Runner.app

      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ios-build
          path: ios-build.zip

  create_release:
    runs-on: ubuntu-latest
    needs: [build_windows, build_macos, build_linux, build_android, build_ios]
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            artifacts/windows-installer/*
            artifacts/macos-build/*
            artifacts/linux-build/*
            artifacts/android-builds/*
            artifacts/ios-build/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
